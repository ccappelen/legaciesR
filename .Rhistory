year_seq <- seq(interval[1], interval[2], interval[3])
year_seq <- seq(interval[1], interval[2], interval[3])[-1]
year_seq <- seq(interval[1], interval[2], interval[3])[-1]
year_seq
year_seq <- seq(interval[1], interval[2], interval[3])
max(year_seq)
shp <- df
period_name <- "year"
interval_min <- min(shp[[period_name]])
interval_max <- max(shp[[period_name]])
interval_length <- 20
year_seq <- seq(interval_min, interval_max, interval_length)
interval_min
interval_min <- min(shp[[period_name]], na.rm = T)
interval_max <- max(shp[[period_name]], na.rm = T)
interval_length <- 20
year_seq <- seq(interval_min, interval_max, interval_length)
year_seq
View(df)
df <- df %>%
filter(year >= 1790 & year <= 1920)
shp <- df
interval_min <- min(shp[[period_name]], na.rm = T)
interval_max <- max(shp[[period_name]], na.rm = T)
interval_length <- 20
year_seq <- seq(interval_min, interval_max, interval_length)
year_seq
max(year_seq) - interval_max
interval_max - max(year_seq) < interval_length
year_seq[length(year_seq)]
year_seq[length(year_seq)] <- interval_max
year_seq
year_seq_char <- paste0(year_seq)
year_seq_char
year_seq_char <- paste0(year_seq[-length(year_seq)], "-", year_seq[-1])
year_seq_char
?cut
cut(c(1790, 1799, 1805, 1830, 1834, 1837, 1853, 1870, 1880, 1890, 1910),
breaks = year_seq)
cut(c(1790, 1799, 1805, 1830, 1834, 1837, 1853, 1870, 1880, 1890, 1910),
breaks = year_seq, labels = FALSE)
cut(c(1790, 1799, 1805, 1830, 1834, 1837, 1853, 1870, 1880, 1890, 1910),
breaks = year_seq, labels = FALSE, include.lowest = T)
cut(c(1790, 1799, 1805, 1830, 1834, 1837, 1853, 1870, 1880, 1890, 1910),
breaks = year_seq, labels = TRUE, include.lowest = T)
cut(c(1790, 1799, 1805, 1830, 1834, 1837, 1853, 1870, 1880, 1890, 1910),
breaks = year_seq, include.lowest = T)
year_seq_char
cut(c(1790, 1799, 1805, 1830, 1834, 1837, 1853, 1870, 1880, 1890, 1910),
breaks = year_seq, include.lowest = T, labels = year_seq_char)
cut(c(1790, 1799, 1805, 1830, 1834, 1837, 1853, 1870, 1880, 1890, 1891, 1910),
breaks = year_seq, include.lowest = T, labels = year_seq_char)
shp <- shp %>%
dplyr::mutate(
period = cut(year, breaks = year_seq, labels = year_seq_car, include.lowest = T))
shp <- shp %>%
dplyr::mutate(
period = cut(year, breaks = year_seq, labels = year_seq_char, include.lowest = T))
shp
df_list <- split(df, df$COWID)
df_list
?split
?eval
dd <- "COWID"
eval(dd, df)
eval(dd, parent.frame(df))
eval(dd, envir = parent.frame(df))
eval(dd, envir = parent.frame())
?substitute
eval(dd, df, parent.frame())
dd$eval(dd, df, parent.frame())
grp_id <- "COWID"
df_list <- split(df, df[[grp_id]])
df_list[[1]]
df_list[1]
df %>%
distinct(COWID) %>%
summarise(n())
df %>%
st_drop_geometry() %>%
distinct(COWID) %>%
summarise(n())
df %>%
sf::st_drop_geometry() %>%
distinct(COWID) %>%
summarise(n())
df
shp
df_list <- split(shp, list(shp[[grp_id]], shp[["period"]]))
df_list[1]
df_list[2]
df_list[3]
df_list[4]
df_list[5]
shp %>%
distinct(COWID, period) %>%
summarise(n())
shp %>%
sf::st_drop_geometry() %>%
distinct(COWID, period) %>%
summarise(n())
df_list <- split(shp, list(shp[[grp_id]], shp[["period"]]), drop = T)
?sf::st_as_sf.data.frame
roxygenize()
library(roxygen2)
roxygenize()
roxygenize()
roxygenize()
roxygenize()
roxygenize()
roxygenize()
roxygenize()
df <- legaciesr::shape_raw_polygons
get_contours(df, grp_id = "COWID")
shp <- df
grp_id <- "COWID"
shp <- shp %>%
dplyr::group_by(grp_id) %>%
dplyr::filter(n() >= nmap_threshold)
shp <- shp %>%
dplyr::group_by({{grp_id}}) %>%
dplyr::filter(n() >= nmap_threshold)
df <- legaciesr::shape_raw_polygons
get_contours(df, grp_id = "COWID")
shp <- shp %>%
dplyr::group_by({{grp_id}}) %>%
dplyr::filter(n() >= nmap_threshold)
nmap_threshold <- 5
shp <- shp %>%
dplyr::group_by({{grp_id}}) %>%
dplyr::filter(n() >= nmap_threshold)
shp
df %>%
group_by(COWID) %>%
filter(n() >= nmap_threshold)
df %>%
group_by({{"COWID"}}) %>%
filter(n() >= nmap_threshold)
df %>%
group_by({{grp_id}}) %>%
filter(n() >= nmap_threshold)
df %>%
group_by({{grp_id}}) %>%
mutate(nmaps = n()) %>%
filter(nmaps >= nmap_threshold)
df %>%
group_by({{grp_id}}) %>%
mutate(nmaps = n()) %>%
select(COWID, nmaps)
df %>%
group_by({{grp_id}})
get_contours(df, grp_id = COWID)
dd <- function(shp, grp_id, nmap_threshold){
shp <- shp %>%
group_by({{ grp_id }}) %>%
filter(n >= nmap_threshold)
return(shp)
}
dd(shp = df, grp_id = COWID, nmap_threshold = 5)
shp <- shp %>%
group_by({{ grp_id }}) %>%
filter(n() >= nmap_threshold)
shp
?sym
library(dplyr)
dd <- function(shp, grp_id, nmap_threshold){
shp <- shp %>%
group_by({{ grp_id }}) %>%
filter(n() >= nmap_threshold)
return(shp)
}
dd(shp = df, grp_id = COWID, nmap_threshold = 5)
shp <- shp %>%
dplyr::group_by({{grp_id}}) %>%
dplyr::filter(n() >= nmap_threshold)
shp
shp <- shp %>%
dplyr::group_by({{ grp_id }}) %>%
dplyr::filter(n() >= nmap_threshold)
shp
shp <- shp %>%
dplyr::group_by(COWID) %>%
dplyr::filter(n() >= nmap_threshold)
df <- legaciesr::shape_raw_polygons
get_contours(df, grp_id = COWID)
get_contours(df, grp_id = "COWID")
get_contours(df, grp_id = COWID)
df_list[1]
df[[COWID]]
dd <- function(shp, grp_id, nmap_threshold){
shp <- shp %>%
group_by({{ grp_id }}) %>%
filter(n() >= nmap_threshold)
shp_list <- split(shp, shp${{grp_id}}, drop = T)
dd <- function(shp, grp_id, nmap_threshold){
shp <- shp %>%
group_by({{ grp_id }}) %>%
filter(n() >= nmap_threshold)
shp_list <- split(shp, shp$grp_id, drop = T)
return(shp_list)
}
dd(shp = df, grp_id = COWID, nmap_threshold = 5)
sym(grp_id)
?sym
ensym(grp_id)
expr(grp_id)
enquo(grp_id)
syms(grp_id)
as_label(grp_id)
quo(grp_id)
quo_name(grp_id)
"COWID"
dd <- function(shp, grp_id, nmap_threshold){
shp <- shp %>%
group_by({{ grp_id }}) %>%
filter(n() >= nmap_threshold)
shp_list <- split(shp, shp[[quo_name(grp_id)]], drop = T)
return(shp_list)
}
dd(shp = df, grp_id = COWID, nmap_threshold = 5)
dd <- function(shp, grp_id, nmap_threshold){
shp <- shp %>%
group_by({{ grp_id }}) %>%
filter(n() >= nmap_threshold)
shp_list <- split(shp, shp[[quo_name({{grp_id}})]], drop = T)
return(shp_list)
}
dd(shp = df, grp_id = COWID, nmap_threshold = 5)
!!rlang::sym(COWID)
deparse(substitute(COWID))
dd <- function(shp, grp_id, nmap_threshold){
shp <- shp %>%
group_by({{ grp_id }}) %>%
filter(n() >= nmap_threshold)
shp_list <- split(shp, shp[[deparse(substitute(COWID))]], drop = T)
return(shp_list)
}
dd(shp = df, grp_id = COWID, nmap_threshold = 5)
df <- legaciesr::shape_raw_polygons
get_contours(df, grp_id = COWID)
get_contours(df, grp_id = "COWID")
dd <- function(shp, grp_id){
shp <- shp %>%
group_by({{ grp_id }}) %>%
summarise(n())
}
dd(df, grp_id = COWID)
dd <- function(shp, grp_id){
shp <- shp %>%
sf::st_drop_geometry() %>%
group_by({{ grp_id }}) %>%
summarise(n())
}
dd(df, grp_id = COWID)
dd(df, grp_id = COWID)
dd <- function(shp, grp_id){
shp <- shp %>%
sf::st_drop_geometry() %>%
group_by({{ grp_id }}) %>%
summarise(n())
return(shp)
}
dd(df, grp_id = COWID)
dd <- function(shp, grp_id){
shp <- shp %>%
sf::st_drop_geometry() %>%
group_by({{ grp_id }}) %>%
summarise(n = n())
return(shp)
}
dd(df, grp_id = COWID)
dd(df, grp_id = "COWID")
dd <- function(shp, grp_id){
if(is.character(grp_id)) stop("ERROR")
shp <- shp %>%
sf::st_drop_geometry() %>%
group_by({{ grp_id }}) %>%
summarise(n = n())
return(shp)
}
dd(df, grp_id = COWID)
dd(df, grp_id = "COWID")
dd <- function(shp, grp_id){
if(is.character(sym(grp_id))) stop("ERROR")
shp <- shp %>%
sf::st_drop_geometry() %>%
group_by({{ grp_id }}) %>%
summarise(n = n())
return(shp)
}
dd(df, grp_id = "COWID")
dd(df, grp_id = COWID)
if(is.character(enquo(grp_id))) stop("ERROR")
dd <- function(shp, grp_id){
if(is.character(enquo(grp_id))) stop("ERROR")
shp <- shp %>%
sf::st_drop_geometry() %>%
group_by({{ grp_id }}) %>%
summarise(n = n())
return(shp)
}
dd(df, grp_id = COWID)
dd(df, grp_id = "COWID")
dd(df, grp_id = COWID)
dd <- function(shp, grp_id){
if(is.character(!!sym(grp_id))) stop("ERROR")
shp <- shp %>%
sf::st_drop_geometry() %>%
group_by({{ grp_id }}) %>%
summarise(n = n())
return(shp)
}
dd(df, grp_id = COWID)
dd <- function(shp, grp_id){
dd <- function(shp, grp_id){
if(is.character(substitute(grp_id))) stop("ERROR")
shp <- shp %>%
sf::st_drop_geometry() %>%
group_by({{ grp_id }}) %>%
summarise(n = n())
return(shp)
}
dd <- function(shp, grp_id){
if(is.character(substitute(grp_id))) stop("ERROR")
shp <- shp %>%
sf::st_drop_geometry() %>%
group_by({{ grp_id }}) %>%
summarise(n = n())
return(shp)
}
dd(df, grp_id = COWID)
dd(df, grp_id = "COWID")
df <- legaciesr::shape_raw_polygons
get_contours(df, grp_id = "COWID")
get_contours(df, grp_id = COWID)
get_contours(df, grp_id = COWID, invalid_geom = "exclude")
warnings()
roxygen2::roxygenize()
df <- legaciesr::shape_raw_polygons
df <- contours <- get_contours(df, grp_id = COWID, invalid_geom = "exclude")
df <- legaciesr::shape_raw_polygons
df_contours <- get_contours(df, grp_id = COWID, invalid_geom = "exclude")
df_contours <- get_contours(df, grp_id = COWID, invalid_geom = "fix_exclude")
df_contours
df <- legaciesr::shape_raw_polygons
df_list <- split(df, df$COWID)
df_contours <- lapply(df_list,
FUN = function(x) contour_polygons(x))
df_contours <- lapply(df_list,
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
df_list[[1]]
contour_polygons(df_list[[1]], invalid_geom = "exclude")
contour_polygons(df_list[[2]], invalid_geom = "exclude")
contour_polygons(df_list[[3]], invalid_geom = "exclude")
length(df_list)
for(i in 1:length(df_list)){
contour_polygons(df_list[[i]], invalid_geom = "exclude")
}
contour_polygons(df_list[[38]], invalid_geom = "exclude")
shp <- df_list[[38]]
!all(sf::st_is_valid(shp))
shp[st_is_valid(shp), ]
shp[sf::st_is_valid(shp), ]
shp
shp <- df_list[[38]]
shp
!all(sf::st_is_valid(shp))
sf::st_is_valid(shp)
shp
shp <- shp[sf::st_is_valid(shp), ]
sf::st_is_valid(shp)
shp <- df_list[[38]]
sf::st_is_valid(shp)
any(sf::st_is_valid(shp))
all(sf::st_is_valid(shp))
all(!sf::st_is_valid(shp))
!all(sf::st_is_valid(shp))
shp <- shp[sf::st_is_valid(shp), ]
!all(sf::st_is_valid(shp))
!all(sf::st_is_valid(shp))
shp
all(sf::st_is_valid(shp))
shp <- df_list[[38]]
all(sf::st_is_valid(shp))
!all(sf::st_is_valid(shp))
length(shp)
nrow(shp)
shp
df %>%
filter(COWNUM == 651)
shp <- df_list[[38]]
nrow(shp)
shp <- shp[sf::st_is_valid(shp), ]
nrow(shp)
roxygen2::roxygenize()
roxygen2::roxygenize()
df <- legaciesr::shape_raw_polygons
df <- df %>%
group_by(COWID) %>%
filter(n() >= 5)
df_list <- split(df, df$COWID)
df_contours <- lapply(df_list,
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
for(i in 1:length(df_list)){
contour_polygons(df_list[[i]], invalid_geom = "exclude")
}
df_list[[i]]
shp <- df_list[[3]]
shp
sf::st_is_valid(shp)
shp <- shp[sf::st_is_valid(shp), ]
sf::st_is_valid(shp)
!all(sf::st_is_valid(shp))
shp <- df_list[[3]]
!all(sf::st_is_valid(shp))
all(sf::st_is_valid(shp))
sf::st_is_valid(shp)
df <- legaciesr::shape_raw_polygons
df <- df %>%
group_by(COWID) %>%
filter(n() >= 5)
df_list <- split(df, df$COWID)
df_contours <- lapply(df_list,
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
library(pbapply)
install.packages("pbapply")
library(pbapply)
df_contours <- pblapply(df_list,
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
?pblapply
df_list[1:10]
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"),
pboptions(char = "="))
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"),
pboptions = pboptions(char = "="))
pboptions(char = "=")
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
pboptions(char = "=", style = 3)
pboptions(char = "=", style = 3)
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
pboptions(char = "=", style = 2)
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
pboptions(char = "=", style = 1)
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
pboptions(char = "=", style = 4)
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
pboptions(char = "=", style = 5)
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
pboptions(char = "=", style = 2)
pboptions(char = "=", style = 1)
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
parallel::detectCores()
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"),
cl = parallel::detectCores())
df_contours <- pblapply(df_list,
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"),
cl = parallel::detectCores())
library(tictoc)
install.packages("tictoc")
library(tictoc)
tic()
df_contours <- pblapply(df_list,
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"),
cl = NULL)
toc()
tic()
df_contours <- pblapply(df_list,
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"),
cl = parallel::detectCores())
toc()
pboptions(char = "=", style = 1, use_lb = T)
df_contours <- pblapply(df_list,
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"),
cl = parallel::detectCores())
pboptions(char = "=", style = 1, use_lb = F)
pboptions(char = "=", style = 1, use_lb = F)
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
pboptions(char = "=", style = 1, type = "none")
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
pboptions(char = "=", style = 1, type = "txt")
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
pboptions(char = "=", style = 1, type = "timer")
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"))
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"),
cl = 1)
df_contours <- pblapply(df_list[1:10],
FUN = function(x) contour_polygons(x, invalid_geom = "exclude"),
cl = 5)
ncores <- 3
ncores <- ifelse(missing(ncores), parallel::detectCores()-1, ncores)
ncores
rm(ncores)
ncores <- ifelse(missing(ncores), parallel::detectCores()-1, ncores)
roxygenize()
df <- 2
