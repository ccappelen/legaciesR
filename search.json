[{"path":"https://ccappelen.github.io/legaciesR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 legaciesr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ccappelen.github.io/legaciesR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christoffer Cappelen. Author, maintainer.","code":""},{"path":"https://ccappelen.github.io/legaciesR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cappelen C (2025). legaciesr: Data management LEGACIES data project. R package version 0.6.0, https://ccappelen.github.io/legaciesR/, https://www.legacies-project.com.","code":"@Manual{,   title = {legaciesr: Data management for the LEGACIES data project},   author = {Christoffer Cappelen},   year = {2025},   note = {R package version 0.6.0, https://ccappelen.github.io/legaciesR/},   url = {https://www.legacies-project.com}, }"},{"path":"https://ccappelen.github.io/legaciesR/index.html","id":"legaciesr","dir":"","previous_headings":"","what":"Data management for the LEGACIES data project","title":"Data management for the LEGACIES data project","text":"legaciesr package provides set functions used aggregate summarize mapping data collected LEGACIES project. allows users , .., (1) create contour polygons capturing territorial extent historical states different probability thresholds, (2) create grid various summary measures historical state presence, (3) add range commonly used covariates polygon grid data. NB: package still experimental functions considered stable.","code":""},{"path":"https://ccappelen.github.io/legaciesR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data management for the LEGACIES data project","text":"can install development version legaciesr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"ccappelen/legaciesR\") library(legaciesr)  library(sf)  library(dplyr)"},{"path":"https://ccappelen.github.io/legaciesR/index.html","id":"errors-in-current-master_shapefile","dir":"","previous_headings":"","what":"Errors in current master_shapefile","title":"Data management for the LEGACIES data project","text":"Currently, one geometry (COWID = “EGY”) fails rebuild due crossing edges. However, COWIDs result invalid geometries creating contour polygons. now, omitted:","code":"df <- df %>%    filter(!COWID %in% c(\"EGY\", \"LUN\", \"KUN\", \"SAF\"))"},{"path":"https://ccappelen.github.io/legaciesR/index.html","id":"handling-of-invalid-geometries","dir":"","previous_headings":"","what":"Handling of invalid geometries","title":"Data management for the LEGACIES data project","text":"functions legaciesr (default) attempt fix invalid geometries otherwise return error. fixes rely legaciesr::fix_invalid() wrapper around sf::st_make_valid() function attempts reiteratively lower allowed precision rebuild valid geometries. However, invalid geometries can happen many reasons may point data errors well, recommended check valid geometries run legaciesr::fix_invalid() identify potential issues. See package documentation information use function.","code":"df <- example_df # Load example data set (based on random data) df <- fix_invalid(df) #> 1 (0 %) geometries were successfully rebuilt. #> 0 (0 %) geometries failed to rebuild as valid."},{"path":"https://ccappelen.github.io/legaciesR/index.html","id":"create-contour-polygons-for-a-single-group","dir":"","previous_headings":"","what":"Create contour polygons for a single group","title":"Data management for the LEGACIES data project","text":"See documentation additional arguments (e.g., threshold number maps, number contour polygons, resolution raster, handling invalid geometries).","code":"df1 <- df[df$name == unique(df$name)[8], ] contour_polygons(df1, id_vars = name) #> Simple feature collection with 4 features and 4 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -10.55116 ymin: 6.086814 xmax: -1.423012 ymax: 13.81136 #> Geodetic CRS:  WGS 84 #>      name prob  label nmaps                       geometry #> 1 Genovia 0.00    0-1   191 POLYGON ((-4.821082 13.7967... #> 2 Genovia 0.25 0.25-1   191 POLYGON ((-5.220855 12.9311... #> 3 Genovia 0.50  0.5-1   191 POLYGON ((-5.220855 12.3317... #> 4 Genovia 0.75 0.75-1   191 MULTIPOLYGON (((-4.454624 1..."},{"path":"https://ccappelen.github.io/legaciesR/index.html","id":"create-contour-polygons-across-all-groups","dir":"","previous_headings":"","what":"Create contour polygons across all groups","title":"Data management for the LEGACIES data project","text":"See documentation additional arguments (e.g., specifying period intervals group , thresholds number maps within group, etc.).","code":"get_contours(df, grp_id = name) #> Simple feature collection with 88 features and 4 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -10.55116 ymin: -23.1782 xmax: 46.48245 ymax: 35.56343 #> Geodetic CRS:  WGS 84 #> First 10 features: #>           name prob  label nmaps                       geometry #> 1  Absurdistan 0.00    0-1    70 POLYGON ((-0.1282136 15.058... #> 2  Absurdistan 0.25 0.25-1    70 POLYGON ((-0.5950196 14.426... #> 3  Absurdistan 0.50  0.5-1    70 POLYGON ((-0.3616166 13.927... #> 4  Absurdistan 0.75 0.75-1    70 MULTIPOLYGON (((-0.29493 13... #> 5      Agrabah 0.00    0-1   129 POLYGON ((22.69547 31.91306... #> 6      Agrabah 0.25 0.25-1   129 POLYGON ((23.49557 30.80692... #> 7      Agrabah 0.50  0.5-1   129 MULTIPOLYGON (((25.62919 29... #> 8      Agrabah 0.75 0.75-1   129 MULTIPOLYGON (((25.39583 28... #> 9    Arendelle 0.00    0-1    70 POLYGON ((7.970548 19.65083... #> 10   Arendelle 0.25 0.25-1    70 MULTIPOLYGON (((6.934863 15..."},{"path":"https://ccappelen.github.io/legaciesR/index.html","id":"create-contour-polygons-across-all-groups-and-by-period","dir":"","previous_headings":"","what":"Create contour polygons across all groups and by period","title":"Data management for the LEGACIES data project","text":"","code":"get_contours(df, by_period = T, grp_id = name, period_id = year) #> Simple feature collection with 440 features and 5 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -10.55116 ymin: -23.1782 xmax: 46.48245 ymax: 35.56343 #> Geodetic CRS:  WGS 84 #> First 10 features: #>           name    period prob  label nmaps                       geometry #> 1  Absurdistan 1800-1820 0.00    0-1    17 POLYGON ((0.4913785 15.0530... #> 2  Absurdistan 1800-1820 0.25 0.25-1    17 MULTIPOLYGON (((-0.541555 1... #> 3  Absurdistan 1800-1820 0.50  0.5-1    17 MULTIPOLYGON (((0.4913785 1... #> 4  Absurdistan 1800-1820 0.75 0.75-1    17 MULTIPOLYGON (((-0.00842805... #> 5      Agrabah 1800-1820 0.00    0-1    37 POLYGON ((22.97841 31.92655... #> 6      Agrabah 1800-1820 0.25 0.25-1    37 MULTIPOLYGON (((23.21214 30... #> 7      Agrabah 1800-1820 0.50  0.5-1    37 POLYGON ((24.41419 29.7902,... #> 8      Agrabah 1800-1820 0.75 0.75-1    37 MULTIPOLYGON (((24.31402 28... #> 9    Arendelle 1800-1820 0.00    0-1    16 POLYGON ((6.567361 19.49756... #> 10   Arendelle 1800-1820 0.25 0.25-1    16 MULTIPOLYGON (((7.335773 14..."},{"path":"https://ccappelen.github.io/legaciesR/index.html","id":"support-for-parallel-processing","dir":"","previous_headings":"","what":"Support for parallel processing:","title":"Data management for the LEGACIES data project","text":"Parallel processing implemented using [future::future] framework. two ways running jobs parallel: multicore uses ‘forking’ run multiple jobs parallel shared memory multisession launches set background R sessions. ‘Forking’ can faster multisession larger overhead associated copying active environment background R session (whereas forking processes shares memory). However, ‘forking’ supported Windows platforms considered unstable running within RStudio (Windows Unix systems MacOS). function automatically determine whether multicore supported platform choose appropriate plan. greater overhead associated multisession primarily first parallel run given R session (since background R sessions stays available additional parallel jobs). possible define [future::plan(“multisession”)] global environment, minimize overhead subsequent parallel jobs (apart first). function automatically detect multisession plan set globally , thus, close background sessions running.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/contour_polygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Contour Polygons — contour_polygons","title":"Create Contour Polygons — contour_polygons","text":"function creates contour polygons multiple overlapping polygons.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/contour_polygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Contour Polygons — contour_polygons","text":"","code":"contour_polygons(   shp,   cuts = 4,   id_vars,   res = 1/30,   nmap_threshold = 2,   smoothing = TRUE,   invalid_geom = c(\"stop\", \"fix\", \"exclude\"),   include_higher = TRUE )"},{"path":"https://ccappelen.github.io/legaciesR/reference/contour_polygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Contour Polygons — contour_polygons","text":"shp sf dataframe aggregated. Must consist one feature. cuts Integer length 1 specifying number (equally spaced) contour polygons returned. example, cuts = 10 function return 10 polygons representing 10 deciles (0-0.1, 0.1-0.2, ...). id_vars Group identifiers. res Resolution raster (degrees) used calculate polygon density. Higher resolution (.e., lower numbers) creates smoother borders also increases processing time. Default 1/30 degrees. nmap_threshold Integer indicating number geometries required. Default 2. threshold 1, single geometry returned unmodified. smoothing Logical, whether apply smoothing polygonizing raster. Default TRUE. invalid_geom Character, handle invalid geometries. \"stop\", returns error invalid geometries; \"exclude\", invalid geometries removed calculating contours; \"fix\", invalid geometries rebuilt using fix_invalid. recommended check invalid geometries run fix_invalid separately. include_higher logical, whether contour polygons include percentiles current interval. TRUE (default), 50 % polygon include areas covered least 50 % shapes (just within specified interval, e.g., 0.75-1, 0.50-1, 0.25-1...). FALSE, polygon include areas within specified interval (e.g., 0.75-1, 0.50-0.75, 0.25-0.50...).","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/contour_polygons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Contour Polygons — contour_polygons","text":"Returns sf dataframe number features specified cuts. density, percentile, stored columns prob label.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/create_random_polygons_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create random overlapping polygons — create_random_polygons_df","title":"Create random overlapping polygons — create_random_polygons_df","text":"Create random overlapping polygons","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/create_random_polygons_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create random overlapping polygons — create_random_polygons_df","text":"","code":"create_random_polygons_df(   ext,   n = 5,   nmap_min = 50,   nmap_max = 200,   year_min = 1800,   year_max = 1900,   n.pnts = 10,   progress = TRUE )"},{"path":"https://ccappelen.github.io/legaciesR/reference/create_random_polygons_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create random overlapping polygons — create_random_polygons_df","text":"ext sf object, within polygons sampled. NULL, use polygon Africa extent extent object (rnaturalearthdata::countries50). n Integer, number groups create nmap_min Integer, minimum number features within group nmap_max Integer, maximum number features within group year_min Integer, minimum year year_max Integer, maximum year n.pnts Integer, number points sample feature create polygon progress Logical, whether show progress bar","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/create_random_polygons_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create random overlapping polygons — create_random_polygons_df","text":"sf dataframe random overlapping polygons","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/detect_errors.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect potential errors in maps — detect_errors","title":"Detect potential errors in maps — detect_errors","text":"Detect potential errors maps","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/detect_errors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect potential errors in maps — detect_errors","text":"","code":"detect_errors(   shp,   capital_data,   id_var,   period_var,   errors,   dist,   parallel = TRUE,   ncores,   report = TRUE,   returnList = TRUE )"},{"path":"https://ccappelen.github.io/legaciesR/reference/detect_errors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect potential errors in maps — detect_errors","text":"shp sf dataframe containing geometries capital_data Dataframe containing information capitals (year). id_var period_var names shp. id_var Name grouping variable (e.g., COWID) period_var Name year variable errors Character vector errors search . See details. dist Minimum allowable distance (km) capitals can outside polygons. parallel Whether use parallel processing. Default TRUE. ncores Number cores use parallel processing. Default use available cores. report Whether output report potential errors. Default sf dataframe columns error detection. returnList Whether return list containing full sf data frame separate data frames error type (default) just full sf data frame. full sf data frame either way include columns indicating potential errors type.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/detect_errors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect potential errors in maps — detect_errors","text":"Data frame id_duplicates Whether COWID COWNUM align, .e. duplicate COWIDs different COWNUMs? missing_id Whether geometries missing id_var. singles Whether COWIDs one map (may indicate wrong COWID). year Whether polygons years outside study window (.e. 1750-1920) year missing. overlap Whether COWIDs one polygons overlap polygons. capital Whether capitals associated COWID falls outside polygons. option dist can used specify minimum allowable distance. empty Check whether empty geometries.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/example_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data set — example_df","title":"Example data set — example_df","text":"data set grouped polygons (id year) resembling data structure package designed handle. polygons generated randomly reflect actual political entities (historical contemporary).","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/example_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data set — example_df","text":"","code":"example_df"},{"path":[]},{"path":"https://ccappelen.github.io/legaciesR/reference/example_df.html","id":"example-df","dir":"Reference","previous_headings":"","what":"example_df","title":"Example data set — example_df","text":"data frame 7,240 rows 60 columns: id ID number fictional country name Name fictional country year Year territorial extent","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/fix_invalid.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix Invalid Geometries — fix_invalid","title":"Fix Invalid Geometries — fix_invalid","text":"Rebuilds invalid geometries. necessary, functions iteratively lower snapping precision default options inadequate.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/fix_invalid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix Invalid Geometries — fix_invalid","text":"","code":"fix_invalid(   shp,   max_precision = 10^7,   min_precision = 10,   stop_if_invalid = FALSE,   progress = TRUE,   parallel = NULL,   ncores,   report = TRUE,   reportColumns = TRUE )"},{"path":"https://ccappelen.github.io/legaciesR/reference/fix_invalid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix Invalid Geometries — fix_invalid","text":"shp sf dataframe. max_precision Integer, maximum level precision s2::s2_options(), default 10^7. min_precision Integer, minimum allowed precision s2::s2_options(), default 10. geometry invalid rebuilding minimum precision allowed, function return error stop_if_invalid TRUE warning otherwise. stop_if_invalid Logical, whether function return error fails rebuild valid geometry. error message indicate row number invalid geometry. progress Logical, whether progress bar displayed. Default TRUE. parallel Logical, whether use parallel processing ncores number cores. See details . ncores Integer, number cores use parallel processing. Default available cores minus 1. report Logical, whether report number valid, rebuilt, invalid geometries. reportColumns FALSE, report generated. reportColumns Logical, whether return status geometry new columns (geom_valid, rebuilt, snap_precision).","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/fix_invalid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix Invalid Geometries — fix_invalid","text":"Returns sf dataframe number features input. dataframe includes three new columns: geom_valid indicates whether original geometry valid (TRUE), rebuilt indicates geometry successfully rebuilt, snap_precision indicates snapping precision used rebuild geometry (rebuilt FALSE, snap_precision indicates minimum snapping precision led invalid geometry).","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/fix_invalid.html","id":"support-for-parallel-processing","dir":"Reference","previous_headings":"","what":"Support for parallel processing","title":"Fix Invalid Geometries — fix_invalid","text":"Parallel processing implemented using future::future framework. two ways running jobs parallel: multicore uses 'forking' run multiple jobs parallel shared memory multisession launches set background R sessions. 'Forking' can faster multisession larger overhead associated copying active environment background R session (whereas forking processes shares memory). However, 'forking' supported Windows platforms considered unstable running within RStudio (Windows Unix systems MacOS). function automatically determine whether multicore supported platform choose appropriate plan. greater overhead associated multisession primarily first parallel run given R session (since background R sessions stays available additional parallel jobs). possible define future::plan() global environment, minimize overhead subsequent parallel jobs (apart first). function automatically detect multisession plan set globally , thus, close background sessions running.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/get_contours.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Contour Polygons Across Groups — get_contours","title":"Get Contour Polygons Across Groups — get_contours","text":"function creates contour polygons across multiple groups, either group alone combination time column.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/get_contours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Contour Polygons Across Groups — get_contours","text":"","code":"get_contours(   shp,   grp_id,   by_period = FALSE,   interval = NULL,   period_id,   cuts = 4,   include_higher = TRUE,   nmap_threshold = 5,   invalid_geom = c(\"stop\", \"fix\", \"exclude\"),   smoothing = TRUE,   returnList = FALSE,   progress = TRUE,   parallel = NULL,   ncores,   ... )"},{"path":"https://ccappelen.github.io/legaciesR/reference/get_contours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Contour Polygons Across Groups — get_contours","text":"shp sf dataframe containing geometries (polygons). grp_id Name grouping variable. by_period Logical, indicating shapes divided groups time addition IDs. Default FALSE. interval Scalar vector indicating intervals group . NULL (default), intervals automatically set 20 (years) include full range (.e. seq(min, max, 20)). user specification, value can either scalar, indicating length intervals (case full range used), vector specifying exact breaks, including start first interval end last interval. period_id Name period variable used time grouping. argument necessary by_period TRUE. cuts Integer length 1 specifying number (equally spaced) contour polygons returned. example, cuts = 10 function return 10 polygons representing 10 deciles (0-0.1, 0.1-0.2, ...). include_higher logical, whether contour polygons include percentiles current interval. TRUE (default), 50 % polygon include areas covered least 50 % shapes (just within specified interval, e.g., 0.75-1, 0.50-1, 0.25-1...). FALSE, polygon include areas within specified interval (e.g., 0.75-1, 0.50-0.75, 0.25-0.50...). nmap_threshold Integer, indicating number shapes required within group. Default 5. invalid_geom Character, handle invalid geometries. \"stop\", returns error invalid geometries; \"exclude\", invalid geometries removed calculating contours; \"fix\", invalid geometries rebuilt using fix_invalid. recommended check invalid geometries run fix_invalid separately. smoothing Logical, whether apply smoothing polygonizing raster. Default TRUE. returnList Logical, whether return list geometries group. Default return sf dataframe containing geometries. progress Logical, whether show progress bar. parallel Logical, whether use parallel processing ncores number cores. See details . ncores Integer, number cores use parallel processing. Default available cores minus 1. ... Additional arguments passed contour_polygons.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/get_contours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Contour Polygons Across Groups — get_contours","text":"Returns either sf dataframe (default) list sf dataframes (one list item per group).","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/get_contours.html","id":"support-for-parallel-processing","dir":"Reference","previous_headings":"","what":"Support for parallel processing","title":"Get Contour Polygons Across Groups — get_contours","text":"Parallel processing implemented using future::future framework. two ways running jobs parallel: multicore uses 'forking' run multiple jobs parallel shared memory multisession launches set background R sessions. 'Forking' can faster multisession larger overhead associated copying active environment background R session (whereas forking processes shares memory). However, 'forking' supported Windows platforms considered unstable running within RStudio (Windows Unix systems MacOS). function automatically determine whether multicore supported platform choose appropriate plan. greater overhead associated multisession primarily first parallel run given R session (since background R sessions stays available additional parallel jobs). possible define future::plan() global environment, minimize overhead subsequent parallel jobs (apart first). function automatically detect multisession plan set globally , thus, close background sessions running.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/get_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge LEGACIES data with covariates — get_covariates","title":"Merge LEGACIES data with covariates — get_covariates","text":"Merge LEGACIES data covariates","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/get_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge LEGACIES data with covariates — get_covariates","text":"","code":"get_covariates(x, vars, path, progress = TRUE, parallel = FALSE, coords)"},{"path":"https://ccappelen.github.io/legaciesR/reference/get_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge LEGACIES data with covariates — get_covariates","text":"x List named elements r, object class SpatRaster, data, object class data.frame, named object class data.frame. list object returned get_grid function return = \"list\". vars Covariate data merge. Default includes variables. See details . path Character string specifying path name LEGACIES team folder. Depends user's computer, generally along lines \"~/user/OneDrive-NTNU/legacies-project\". progress Logical, whether progress updates displayed. parallel Logical, whether parallelize jobs (CURRENTLY USED) coords Character vector length two specifying names coordinate (longitude/latitude) variables. Default c(\"lon\", \"lat\") follows convention get_grid.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/get_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge LEGACIES data with covariates — get_covariates","text":"Data frame list data frame SpatRaster. default, covariates included, also possible specify covariates include argument vars, takes character vector input. following data available: terrain . climate . crops . rivers . coast","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/get_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create grid summarizing overlapping polygons. — get_grid","title":"Create grid summarizing overlapping polygons. — get_grid","text":"Create gridded data group (group year) summarizing number polygons covering given grid cell.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/get_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create grid summarizing overlapping polygons. — get_grid","text":"","code":"get_grid(   shp,   ras,   raster_from_shp = TRUE,   res = 1/2,   by_period = FALSE,   id_var,   period_var,   period_interval,   nmap_threshold = 5,   output,   subset = NULL,   parallel = TRUE,   ncores,   updates = T,   return = c(\"list\", \"data\"),   fix_invalid = FALSE )"},{"path":"https://ccappelen.github.io/legaciesR/reference/get_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create grid summarizing overlapping polygons. — get_grid","text":"shp Shape ras Raster raster_from_shp Logical, TRUE, using extent shp define grid. FALSE, ras missing, grid generated based extent rnaturalearthdata::countries50. FALSE ras missing, ras used. res Resolution by_period Whether group period id_var ID variable name period_var Period variable name period_interval Scalar vector indicating intervals group . NULL (default), intervals automatically set 20 (years) include full range (.e. seq(min, max, 20)). user specification, value can either scalar, indicating length intervals (case full range used), vector specifying exact breaks, including start first interval end last interval. nmap_threshold Integer, indicating number shapes required within group. Default 5. output Character vector. See details. subset one-sided formula. provided, resulting grid data based observations defined argument. example, subset = ~ year > 1850. parallel Logical, whether use parallel processing ncores number cores. ncores Integer, number cores use parallel processing. Default available cores minus 1. updates Logical return List data.frame fix_invalid Logical","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/get_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create grid summarizing overlapping polygons. — get_grid","text":"Data frame grid cell--state (grid cell--state--year) several summary measures polygons shp. default, summary measures calculated, also possible specify measures calculate argument output, takes character vector input. following summary measures available: count_across Number polygons intersecting grid cell number distinct states intersecting grid cell. share_largest_count Share polygons state largest number polygons total. share_largest_area Share polygons state largest area. share_largest_share Share polygons state largest share grid cell. share_mean Average share polygons across states intersecting grid cell. borders Total number state borders intersecting grid cell share borders relative total number states intersecting. contested Entropy-based measure contested territory calculated using equation \\(E = -\\sum{}p*ln(p)\\), \\(p\\) state-specific share polygons intersecting grid cell.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/prepare_shapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare shapefiles — prepare_shapes","title":"Prepare shapefiles — prepare_shapes","text":"function prepares data processing functions `legaciesr' package, e.g., expands rows maps coded range (rather specific year), excludes certain maps, etc.","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/prepare_shapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare shapefiles — prepare_shapes","text":"","code":"prepare_shapes(   shp,   state_data,   id_var,   period_var,   range_min,   range_max,   fix_year = TRUE,   year_na = TRUE,   expand_range = TRUE,   match_capitals = TRUE,   exclude_hierarchy = c(\"none\", \"tributary\", \"dependency\", \"all\"),   exclude_core = TRUE,   exclude_incomplete = TRUE,   exclude_sovereign = TRUE,   margin_sovereign = 5,   crop_to_land = TRUE )"},{"path":"https://ccappelen.github.io/legaciesR/reference/prepare_shapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare shapefiles — prepare_shapes","text":"shp sf dataframe state_data dataframe state ID data id_var ID variable, must shp state_data period_var Year variable, must shp state_data range_min Name variable lower year interval range_max Name variable upper year interval fix_year Logical, whether fix three-digit years. Default TRUE. See details. year_na Logical, whether exclude maps year indication (exact range) expand_range Logical, whether expand rows maps year interval, default TRUE. See details. match_capitals Logical, whether add information capital cities shp data. Default TRUE. See details. exclude_hierarchy Character vector, whether exclude maps states subordinated (tributary dependency). none (default) keep maps regardless hierarchy status, tributary exclude tributary states (hierarchy == 1), dependency exclude dependencies (hierarchy == 2), exclude tributaries dependencies. See also combine_hierarchy. exclude_core Exclude maps coded core (.e., include complete shape core periphery). Default TRUE. exclude_incomplete Exclude maps incomplete borders. Default TRUE. exclude_sovereign Exclude maps states sovereign time map. See details. margin_sovereign Number years state sovereign map still included (exclude_sovereign TRUE). Default 5 years. crop_to_land Logical, whether crop geometries land (default TRUE)","code":""},{"path":"https://ccappelen.github.io/legaciesR/reference/prepare_shapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare shapefiles — prepare_shapes","text":"sf dataframe. details: expand_year Expands rows maps interval range rather specific year. lower upper limits always retained. limits, rows ten-year interval. match_capitals Capital coordinates stored separate geometry. multiple capitals year, withh included. capital names separated semicolon. exclude_sovereign Excludes maps states sovereign. year map within 5 years state sovereign, map still included.","code":""}]
